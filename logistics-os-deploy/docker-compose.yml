version: "3.9"
services:
  postgres:
    image: postgres:15-alpine
    container_name: logistics-postgres
    environment:
      POSTGRES_DB: logisticsdb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - logistics-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: logistics-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - logistics-network

  backend:
    build:
      context: ../logistics-os-backend
      dockerfile: Dockerfile
    container_name: logistics-backend
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/logisticsdb
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: admin
      SPRING_RABBITMQ_PASSWORD: password
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - logistics-network

  frontend:
    build:
      context: ../logistics-os-frontend
      dockerfile: Dockerfile
    container_name: logistics-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - logistics-network

networks:
  logistics-network:
    driver: bridge

volumes:
  postgres_data:
